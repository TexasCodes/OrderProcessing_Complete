//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OrderProcessing_Complete
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class orderEntities : DbContext
    {
        public orderEntities()
            : base("name=orderEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<OrderDetail> OrderDetails { get; set; }
        public virtual DbSet<OrderStatusID> OrderStatusIDs { get; set; }
    
        public virtual ObjectResult<sp_OrderDetailsUpdate_Result> sp_OrderDetailsUpdate(Nullable<int> orderID, Nullable<System.DateTime> orderDate, string customerName, string customerAddress, string customerPhone, string tShirtColor, string tShirtSize, Nullable<decimal> tShirtPrice, Nullable<int> quantity, Nullable<int> orderTotal, Nullable<int> orderStatusID, string notes, string option)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var customerAddressParameter = customerAddress != null ?
                new ObjectParameter("CustomerAddress", customerAddress) :
                new ObjectParameter("CustomerAddress", typeof(string));
    
            var customerPhoneParameter = customerPhone != null ?
                new ObjectParameter("CustomerPhone", customerPhone) :
                new ObjectParameter("CustomerPhone", typeof(string));
    
            var tShirtColorParameter = tShirtColor != null ?
                new ObjectParameter("TShirtColor", tShirtColor) :
                new ObjectParameter("TShirtColor", typeof(string));
    
            var tShirtSizeParameter = tShirtSize != null ?
                new ObjectParameter("TShirtSize", tShirtSize) :
                new ObjectParameter("TShirtSize", typeof(string));
    
            var tShirtPriceParameter = tShirtPrice.HasValue ?
                new ObjectParameter("TShirtPrice", tShirtPrice) :
                new ObjectParameter("TShirtPrice", typeof(decimal));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var orderTotalParameter = orderTotal.HasValue ?
                new ObjectParameter("OrderTotal", orderTotal) :
                new ObjectParameter("OrderTotal", typeof(int));
    
            var orderStatusIDParameter = orderStatusID.HasValue ?
                new ObjectParameter("OrderStatusID", orderStatusID) :
                new ObjectParameter("OrderStatusID", typeof(int));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_OrderDetailsUpdate_Result>("sp_OrderDetailsUpdate", orderIDParameter, orderDateParameter, customerNameParameter, customerAddressParameter, customerPhoneParameter, tShirtColorParameter, tShirtSizeParameter, tShirtPriceParameter, quantityParameter, orderTotalParameter, orderStatusIDParameter, notesParameter, optionParameter);
        }
    }
}
